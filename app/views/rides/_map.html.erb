<% content_for(:head) do %>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
    <style type="text/css">
      #map_canvas { height: 100% }
    </style>
    <script type="text/javascript"
      src="http://maps.googleapis.com/maps/api/js?key=AIzaSyDX7PxigmfDjkxMYf_rEmkW9WzU3D73Gtw&sensor=false">
    </script>
    <script type="text/javascript">
      var directionsService = new google.maps.DirectionsService()

      function initialize() {
        if (document.getElementById("ride_start_address").value == "") {
          document.getElementById("ride_start_address").value = "Boonlay MRT Singapore";    // For dev only
        }
        var start = document.getElementById("ride_start_address").value
        var end = document.getElementById("ride_end_address").value
        if (start != "" && end != "") {
          calcRoute();
        }
        directionsDisplay = new google.maps.DirectionsRenderer();
        var myOptions = {
          center: new google.maps.LatLng(1.17, 103.50),
          zoom: 8,
          mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById("map_canvas"),
            myOptions);
        directionsDisplay.setMap(map);
      }
      function calcRoute() {
        var start = document.getElementById("ride_start_address").value;
        var end = document.getElementById("ride_end_address").value;
        if (start != "" && end != "" && start.length > 5 && end.length > 5) {
          var request = {
            origin:start,
            destination:end,
            travelMode: google.maps.TravelMode.DRIVING
          };
          directionsService.route(request, function(result, status) {
            if (status == google.maps.DirectionsStatus.OK) {
              // Display distance
              document.getElementById('map_details_distance').innerHTML = 
                         "Distance: " + parseFloat(result.routes[0].legs[0].distance.value)/1000 + " km";

              // Display and calculate duration
              var duration_in_seconds = parseInt(result.routes[0].legs[0].duration.value);
              document.getElementById('map_details_duration').innerHTML = 
                          "Duration: " + Math.floor(duration_in_seconds/60) + " Minutes " + duration_in_seconds%60 + " Seconds";
              if (document.getElementById('duration')) {
                document.getElementById('duration').value = duration_in_seconds;
              }
              // Display route
              directionsDisplay.setDirections(result);
          
              // Write distance value
              if (document.getElementById('ride_distance_in_meters')) {
                document.getElementById('ride_distance_in_meters').value = result.routes[0].legs[0].distance.value;
              }

              // Get address coordinates
              var geo = new google.maps.Geocoder;
              // Get start coordinates
              var geoCoderStartOptions = {
                address: start
              };
              geo.geocode(geoCoderStartOptions, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                  // extract lat/long
                  document.getElementById('ride_start_lat').value = results[0].geometry.location.lat();
                  document.getElementById('ride_start_long').value = results[0].geometry.location.lng();
                  //document.getElementById('street_address').value = results[0].formatted_address;
                  // extract further information
                  var address = results[0].address_components
                  document.getElementById('ride_start_country').value = extractCountry(address);
                  document.getElementById('ride_start_post_code').value = extractPostcode(address);
                } else {
                  alert("Geocode was not successful for the following reason: " + status);
                }
              });
              // Get end coordinates
              var geoCoderEndOptions = {
                address: end
              };
              geo.geocode(geoCoderEndOptions, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                  document.getElementById('ride_end_lat').value = results[0].geometry.location.lat();
                  document.getElementById('ride_end_long').value = results[0].geometry.location.lng();
                  // extract further information
                  var address = results[0].address_components
                  document.getElementById('ride_end_country').value = extractCountry(address);
                  document.getElementById('ride_end_post_code').value = extractPostcode(address);
                } else {
                  alert("Geocode was not successful for the following reason: " + status);
                }
              });
            }
          });
        }
      }

      function extractCountry(addressComponents) {
        // iterate over components
        for (var i = 0; i < addressComponents.length; i++) {
          // iterate over types
          for (var j = 0; j < addressComponents[i].types.length; j++) {
            if (addressComponents[i].types[j] == "country") {
              return addressComponents[i].long_name;
            }
          }
        }
        return "";
      }

      function extractPostcode(addressComponents) {
        // iterate over components
        for (var i = 0; i < addressComponents.length; i++) {
          // iterate over types
          for (var j = 0; j < addressComponents[i].types.length; j++) {
            if (addressComponents[i].types[j] == "postal_code") {
              return addressComponents[i].short_name;
            }
          }
        }
        return "";
      }
    </script>
<% end %>

<div id="map_canvas" style="min-width:300px; min-height:400px;"></div>
